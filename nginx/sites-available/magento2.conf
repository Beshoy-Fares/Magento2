## Some custom redirect
server {
	include /etc/nginx/conf.d/port.conf;
	server_name example.com;
	return 301 $scheme://www.example.com$request_uri;
}

server {
	include /etc/nginx/conf.d/port.conf;
	#listen 443 http2 ssl;
	server_name www.example.com;
	
	access_log  /var/log/nginx/access.log  main if=$writelog;
	error_log   /var/log/nginx/error.log  error;
	
	if ($bad_client) { return 444; }
	
	set $MAGE_MODE developer;
	##################################
	## Set Magento root folder
	set $MAGE_ROOT /var/www/html;
	## Set main public directory /pub
	root $MAGE_ROOT/pub;
	##################################
	
	## SSL CONFIGURATION
	#ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem; 
	#ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	
	## Nginx and php-fpm status
	include /etc/nginx/conf.d/status.conf;
    
	## Pagespeed module
	#include /etc/nginx/conf.d/pagespeed.conf;
    
	## Server maintenance block.
	#include /etc/nginx/conf.d/maintenance.conf;
	
	## Error log/page
	#include /etc/nginx/conf.d/error_page.conf;
	
	## Magento Setup Tool
	include /etc/nginx/conf.d/setup.conf;
	   
	location / {
		try_files $uri $uri/ /index.php?$args;
		}

	## Static and media assets 
	include /etc/nginx/conf.d/assets.conf;

	## Static location
	rewrite /static/(version\d*/)?(.*)$ /static/$2 last;
	
	## Media location
	location /media/ {
		try_files $uri $uri/ /get.php?$args;
		}
  
	## Protect extra directories
	include /etc/nginx/conf.d/extra_protect.conf;
	   
	## Process php files (strict rule, define files to be executed)
	location ~ (index|get|static|report|404|503)\.php$ {
		try_files $uri =404;
		include /etc/nginx/conf.d/php_backend.conf;
		## Store code with multi domain
		#fastcgi_param	MAGE_RUN_CODE $MAGE_RUN_CODE;
		#fastcgi_param	MAGE_RUN_TYPE $MAGE_RUN_TYPE;
		fastcgi_param	MAGE_MODE $MAGE_MODE;
		}
	
	## Block other undefined php files, possible injections and random malware hooks.
	location ~* ^.+\.php$ { return 404; }
}
