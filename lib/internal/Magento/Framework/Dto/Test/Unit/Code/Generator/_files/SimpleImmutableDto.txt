declare(strict_types=1);

namespace Magento\Framework\Dto\Test\Unit\Code\Generator;

class TestDto implements TestDtoInterface
{
    /**
     * @var string
     */
    private $prop1 = null;

    /**
     * @var string
     */
    private $prop2 = null;

    /**
     * @var string
     */
    private $prop3 = null;

    /**
     * @var string
     */
    private $prop4 = null;

    /**
     * @var \Magento\Framework\Dto\Test\Unit\Code\Generator\TestDtoExtensionInterface
     */
    private $extensionAttributes = null;

    /**
     * @param string $prop1
     * @param string $prop2
     * @param string|null $prop3
     * @param string|null $prop4
     * @param \Magento\Framework\Dto\Test\Unit\Code\Generator\TestDtoExtensionInterface|null $extensionAttributes
     */
    public function __construct(string $prop1, ?string $prop3, ?string $prop2 = null, ?string $prop4 = null, ?\Magento\Framework\Dto\Test\Unit\Code\Generator\TestDtoExtensionInterface $extensionAttributes = null)
    {
        $this->prop1 = $prop1;
        $this->prop2 = $prop2;
        $this->prop3 = $prop3;
        $this->prop4 = $prop4;
        $this->extensionAttributes = $extensionAttributes;
    }

    /**
     * @return string
     */
    public function getProp1() : string
    {
        return $this->prop1;
    }

    /**
     * @return string|null
     */
    public function getProp2() : ?string
    {
        return $this->prop2;
    }

    /**
     * @return string|null
     */
    public function getProp3() : ?string
    {
        return $this->prop3;
    }

    /**
     * @return string|null
     */
    public function getProp4() : ?string
    {
        return $this->prop4;
    }

    /**
     * @return \Magento\Framework\Dto\Test\Unit\Code\Generator\TestDtoExtensionInterface|null
     */
    public function getExtensionAttributes() : ?\Magento\Framework\Dto\Test\Unit\Code\Generator\TestDtoExtensionInterface
    {
        return $this->extensionAttributes;
    }
}
