<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     Mage_Webhook
 * @copyright   Copyright (c) 2013 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

class Mage_Webhook_Block_Adminhtml_Subscriber_Edit extends Mage_Backend_Block_Widget_Form_Container
{
    public function _construct()
    {
        parent::_construct();

        $this->_objectId = 'id';
        $this->_blockGroup = 'Mage_Webhook';
        $this->_controller = 'adminhtml_subscriber';

        $subscriber = Mage::registry('current_subscriber');

        // Don't allow the merchant to delete subscribers that were generated by config file.
        if ($subscriber && $subscriber instanceof Mage_Webhook_Model_Subscriber && $subscriber->getExtensionId()) {
            $this->_removeButton('delete');
        }

        if ($this->_isExistingSubscriber()) {
            // Adding the test button to the top of the container for now, don't know of a better place to put it
            // I've considered adding it to a new form that shows up after this container with a drop down to select
            // what message to send.  Simpler to just put it at the top and send a generic 'ping' message.
            $this->addButton('test', array( 'label' => $this->__('Test'),
                    'onclick'   => 'setLocation(\'' . $this->getTestUrl() . '\')',
                )
            );
        }
    }

    public function getTestUrl()
    {
        return $this->getUrl('*/*/test', array($this->_objectId => $this->getRequest()->getParam($this->_objectId)));
    }

    public function getHeaderText()
    {
        if($this->_isExistingSubscriber()) {
            return $this->__('Edit Subscriber');
        } else {
            return $this->__('Add Subscriber');
        }
    }

    protected function _isExistingSubscriber()
    {
        return Mage::registry('current_subscriber') && Mage::registry('current_subscriber')->getId();
    }
}
