<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright © Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCategoryHighlightedAndProductDisplayedTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Category"/>
            <title value="Сheck that current category is highlighted and all products displayed for it"/>
            <description value="Сheck that current category is highlighted and all products displayed for it"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-19626"/>
            <useCaseId value="MAGETWO-98748"/>
            <group value="Catalog"/>
            <group value="cloud"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleSubCategory" stepKey="category1"/>
            <createData entity="SimpleSubCategory" stepKey="category2"/>
            <createData entity="SimpleSubCategory" stepKey="category3"/>
            <createData entity="SimpleSubCategory" stepKey="category4"/>
            <createData entity="SimpleProduct" stepKey="product1">
                <requiredEntity createDataKey="category1"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="product2">
                <requiredEntity createDataKey="category1"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="product3">
                <requiredEntity createDataKey="category2"/>
            </createData>
            <createData entity="SimpleProduct" stepKey="product4">
                <requiredEntity createDataKey="category2"/>
            </createData>
        </before>
        <after>
            <deleteData createDataKey="product1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="product2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="product3" stepKey="deleteProduct3"/>
            <deleteData createDataKey="product4" stepKey="deleteProduct4"/>
            <deleteData createDataKey="category1" stepKey="deleteCategory1"/>
            <deleteData createDataKey="category2" stepKey="deleteCategory2"/>
            <deleteData createDataKey="category3" stepKey="deleteCategory3"/>
            <deleteData createDataKey="category4" stepKey="deleteCategory4"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!--Open Storefront home page-->
        <comment userInput="Open Storefront home page" stepKey="openStorefrontHomePage"/>
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToStorefrontHomePage"/>
        <!--Click on first category-->
        <comment userInput="Click on first category" stepKey="openFirstCategoryPage"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="clickCategory1Name">
            <argument name="category" value="$$category1$$"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForCategory1Page"/>
        <!--Check if current category is highlighted and the others are not-->
        <comment userInput="Check if current category is highlighted and the others are not" stepKey="checkCateg1NameIsHighlighted"/>
        <grabAttributeFrom selector="{{AdminCategorySidebarTreeSection.categoryHighlighted($$category1.name$$)}}" userInput="class" stepKey="grabCategory1Class"/>
        <assertStringContainsString stepKey="assertCategory1IsHighlighted">
			<actualResult type="const">$grabCategory1Class</actualResult>
			<expectedResult type="string">active</expectedResult>
        </assertStringContainsString>
        <executeJS function="return document.querySelectorAll('{{AdminCategorySidebarTreeSection.categoryNotHighlighted}}').length" stepKey="highlightedAmount"/>
        <assertEquals stepKey="assertRestCategories1IsNotHighlighted">
			<actualResult type="const">$highlightedAmount</actualResult>
			<expectedResult type="int">1</expectedResult>
        </assertEquals>
        <!--See products in the category page-->
        <comment userInput="See products in the category page" stepKey="seeProductsInCategoryPage"/>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct1InCategoryPage">
            <argument name="productName" value="$product1.name$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct2InCategoryPage">
            <argument name="productName" value="$product2.name$"/>
        </actionGroup>
        <!--Click on second category-->
        <comment userInput="Click on second category" stepKey="openSecondCategoryPage"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="clickCategory2Name">
            <argument name="category" value="$category2$"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForCategory2Page"/>
        <!--Check if current category is highlighted  and the others are not-->
        <comment userInput="Check if current category is highlighted and the others are not" stepKey="checkCateg2NameIsHighlighted"/>
        <grabAttributeFrom selector="{{AdminCategorySidebarTreeSection.categoryHighlighted($$category2.name$$)}}" userInput="class" stepKey="grabCategory2Class"/>
        <assertStringContainsString stepKey="assertCategory2IsHighlighted">
			<actualResult type="const">$grabCategory2Class</actualResult>
			<expectedResult type="string">active</expectedResult>
        </assertStringContainsString>
        <executeJS function="return document.querySelectorAll('{{AdminCategorySidebarTreeSection.categoryNotHighlighted}}').length" stepKey="highlightedAmount2"/>
        <assertEquals stepKey="assertRestCategories1IsNotHighlighted2">
			<actualResult type="const">$highlightedAmount2</actualResult>
			<expectedResult type="int">1</expectedResult>
        </assertEquals>
        <!--Assert products in second category page-->
        <comment userInput="Assert products in second category page" stepKey="commentAssertProducts"/>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct3InCategoryPage">
            <argument name="productName" value="$product3.name$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductIsPresentOnCategoryPageActionGroup" stepKey="seeProduct4InCategoryPage">
            <argument name="productName" value="$product4.name$"/>
        </actionGroup>
    </test>
</tests>
