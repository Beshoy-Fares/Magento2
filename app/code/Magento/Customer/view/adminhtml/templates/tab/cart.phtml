<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/**
 * @var \Magento\Customer\Block\Adminhtml\Edit\Tab\Cart $block
 * @var \Magento\Framework\Escaper $escaper
 * @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer
 */
?>
<?php if ($block->getCartHeader()): ?>
<div class="content-header skip-header">
    <table>
        <tr>
            <td><h4><?= $escaper->escapeHtml($block->getCartHeader()) ?></h4></td>
        </tr>
    </table>
    <?= /* @noEscape */ $secureRenderer->renderStyleAsTag("width:50%;", 'div.content-header.skip-header table tr td') ?>
</div>
<?php endif ?>
<?= $block->getGridParentHtml() ?>
<?php if ($block->canDisplayContainer()): ?>
    <?php $listType = $block->getJsObjectName(); ?>
    <?php $scriptString = <<<script
        require([
            "Magento_Ui/js/modal/alert",
            "Magento_Ui/js/modal/confirm",
            "Magento_Catalog/catalog/product/composite/configure"
        ], function(alert, confirm){

        {$escaper->escapeJs($block->getJsObjectName())}cartControl = {
            reload: function (params) {
            if (!params) {
                params = {};
            }
            {$escaper->escapeJs($block->getJsObjectName())}.reloadParams = params;
            {$escaper->escapeJs($block->getJsObjectName())}.reload();
            {$escaper->escapeJs($block->getJsObjectName())}.reloadParams = {};
        },

        configureItem: function (itemId) {
            productConfigure.setOnLoadIFrameCallback('{$escaper->escapeJs($listType)}', this.cbOnLoadIframe.bind(this));
            productConfigure.showItemConfiguration('{$escaper->escapeJs($listType)}', itemId);
            return false;
        },

        cbOnLoadIframe: function (response) {
            if (!response.ok) {
                return;
            }
            this.reload();
        },

        removeItem: function (itemId) {
            var self = this;

            if (!itemId) {
                alert({
                    content: '{$escaper->escapeJs(__('No item specified.'))}'
                });

                return false;
            }

            confirm({
                content: '{$escaper->escapeJs(__('Are you sure you want to remove this item?'))}',
                actions: {
                    confirm: function(){
                        self.reload({'delete':itemId});
                    }
                }
            });
        }
    };

script;

    $params = [
        'customer_id' => $block->getCustomerId(),
        'website_id' => $block->getWebsiteId(),
    ];
    $scriptString .= <<<script
    productConfigure.addListType(
        '{$escaper->escapeJs($listType)}',
        {
            urlFetch: '{$escaper->escapeJs($block->getUrl('customer/cart_product_composite_cart/configure', $params))}',
            urlConfirm: '{$escaper->escapeJs($block->getUrl('customer/cart_product_composite_cart/update', $params))}'
        }
    );

    });
script;
    ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
<?php endif ?>
<br />
